#include <16F887.h>
#device ADC=16

#FUSES HS
#FUSES NOWDT                    //No Watch Dog Timer
#FUSES PUT                      //Power Up Timer
#FUSES MCLR
#FUSES NOPROTECT
#FUSES NOCPD
#FUSES NOBROWNOUT               //No brownout reset
//#FUSES BROWNOUT
//#FUSES BORV40

#FUSES IESO
#FUSES FCMEN
#FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O
#FUSES NODEBUG
//configuration bits: 2007-2CE2(); 2008-0700(FFFF)

#use delay(crystal=20000000)
#use FIXED_IO( E_outputs=PIN_E2,PIN_E1,PIN_E0 )
#use rs232(baud=19200,parity=E,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1)
//#use i2c(Master,Slow,sda=PIN_C4,scl=PIN_C3)

#OPT 1

#define MAX_SECTION 60
#define MODE_A 2
#define MODE_B 3
#define MODE_C 4
#define MODE_D 5

//#INLINE
void fetch_data();

struct
{
	int16 blue;
	int16 red;
	int16 green;
} rgb_bits;

const int16 number_upper[10][3] = 
{
	{0x03F8, 0x0208, 0x03F8}, // 0
	{0x0040, 0x0020, 0x03F8}, // 1
	{0x03C8, 0x0248, 0x0278}, // 2
	{0x0248, 0x0248, 0x03F8}, // 3
	{0x0078, 0x0040, 0x03F8}, // 4
	{0x0278, 0x0248, 0x03C8}, // 5
	{0x03F8, 0x0248, 0x03C8}, // 6
	{0x0008, 0x0008, 0x03F8}, // 7
	{0x03F8, 0x0248, 0x03F8}, // 8
	{0x0278, 0x0248, 0x03F8}  // 9
};

const int16 number_lower[10][3] = 
{
	{0x03F8, 0x0208, 0x03F8}, // 0
	{0x03F8, 0x0100, 0x0080}, // 1
	{0x03C8, 0x0248, 0x0278}, // 2
	{0x03F8, 0x0248, 0x0248}, // 3
	{0x03F8, 0x0040, 0x03C0}, // 4
	{0x0278, 0x0248, 0x03C8}, // 5
	{0x0278, 0x0248, 0x03F8}, // 6
	{0x03F8, 0x0200, 0x0200}, // 7
	{0x03F8, 0x0248, 0x03F8}, // 8
	{0x03F8, 0x0248, 0x03C8}  // 9
};

const int16 fpt[60][3] = 
{
	{0x2000, 0x2058, 0x0000}, {0x8000, 0x8030, 0x0000},
	{0x4000, 0x4000, 0x0018}, {0x8000, 0x8000, 0x0018},
	{0x0000, 0x0000, 0x03F8}, {0x8000, 0x8000, 0x03F8},
	{0x6000, 0x6000, 0x0018}, {0xA000, 0xA000, 0x0018},
	{0x0000, 0x0000, 0x0000}, {0x8000, 0x8000, 0x0000},
	{0x4000, 0x4000, 0x0000}, {0x8000, 0x8000, 0x0000},
	{0x0000, 0x0000, 0x0000}, {0xA000, 0xA000, 0x0000},
	{0x6000, 0x6000, 0x0000}, {0xA000, 0xA000, 0x0000},
	{0x0000, 0x0000, 0x0000}, {0x8000, 0x8000, 0x0000},
	{0x4000, 0x4000, 0x0000}, {0x8000, 0x8000, 0x0000},
	{0x0000, 0x0000, 0x0000}, {0xA001, 0xA000, 0x0001},
	{0x6003, 0x6000, 0x0003}, {0x8007, 0x8000, 0x0007},
	{0x000F, 0x0000, 0x000F}, {0x801F, 0x8000, 0x001F},
	{0x403F, 0x4000, 0x003F}, {0x807F, 0x8000, 0x007F},
	{0x20FF, 0x2000, 0x00FF}, {0xA1FF, 0xA000, 0x01FF},
	{0x60FF, 0x6000, 0x00FF}, {0x807F, 0x8000, 0x007F},
	{0x003F, 0x0000, 0x003F}, {0x801F, 0x8000, 0x001F},
	{0x400F, 0x4000, 0x000F}, {0x8007, 0x8000, 0x0007},
	{0x2003, 0x2000, 0x0003}, {0xA001, 0xA000, 0x0001},
	{0x4000, 0x4000, 0x0000}, {0x8000, 0x8000, 0x0000},
	{0x0000, 0x0000, 0x0000}, {0x8000, 0x8000, 0x0000},
	{0x4000, 0x4000, 0x0000}, {0xA000, 0xA000, 0x0000},
	{0x2000, 0x2000, 0x0000}, {0xA000, 0xA000, 0x0000},
	{0x4000, 0x4000, 0x0000}, {0x8000, 0x8000, 0x0000},
	{0x0000, 0x0000, 0x0000}, {0x8000, 0x8000, 0x0000},
	{0x4000, 0x4000, 0x0000}, {0xA000, 0xA000, 0x0000},
	{0x23F8, 0x2000, 0x0000}, {0x83F8, 0x8000, 0x0000},
	{0x40D8, 0x4000, 0x0000}, {0x80D8, 0x8000, 0x0000},
	{0x0018, 0x0000, 0x0000}, {0x8000, 0x83F8, 0x0000},
	{0x6000, 0x63F8, 0x0000}, {0xA000, 0xA058, 0x0000}
};

const int16 asterisk[11][3] =
{
   {0x0000, 0x8000, 0x8000},
	{0x0000, 0xA000, 0xA000},
	{0x0000, 0xFE00, 0xFE00},
	{0x0000, 0xEB00, 0xEB00},
	{0x0000, 0xC181, 0xC181},
	{0x0000, 0x8043, 0x8043},
	{0x0000, 0x803C, 0x803C},
	{0x0000, 0x8000, 0x8000},
	{0x0000, 0x0000, 0x0000},
	{0x0000, 0x0000, 0x0000},
	{0x0000, 0x0000, 0x0000},
};
